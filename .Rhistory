f <- function(x)
{}
f <- function(x)
{
x^2 - 2
}
f(1.6)
f(1.2)
f(1.4)
f_derivative <- function(x)
{
2 * x
}
f_derivative(2)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_Derivative, 1, 500)
newton_univariate_method(f, f_derivative, 1, 500)
f(1.414214)
f(1.414214)
1.237796e-06
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 500)
newton_univariate_method(f, f_derivative, 1, 50)
newton_univariate_method(f, f_derivative, 1, 50)
newton_univariate_method(f, f_derivative, 1, 5)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 5)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 5)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 5)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 5)
f <- function(x){x^2 - 4}
f(2)
f_derivative <- function(x){2*x}
newton_univariate_method(f, f_derivative, 1, 5)
newton_univariate_method(f, f_derivative, 1, 5)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 5)
f(2)
source('~/My Projects/mathematical-methods-quantitative-finance-class/bisection_method.R')
bisection_univariate_method(f, -3, 3)
f(-2)
f(2)
bisection_univariate_method(f, 0, 3)
bisection_univariate_method(f, 0, 4)
bisection_univariate_method(f, 0, 15)
bisection_univariate_method(f, 0, 255)
source('~/My Projects/mathematical-methods-quantitative-finance-class/bisection_method.R')
bisection_univariate_method(f, 0, 255)
bisection_univariate_method(f, 0, 255, 0)
source('~/My Projects/mathematical-methods-quantitative-finance-class/bisection_method.R')
bisection_univariate_method(f, 0, 255, 0)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
demo(recursion)
demo(glm.vr)
f <- function(x){x^2 - 64}
f_derivative <- function(x){2 * x}
newton_univariate_method(f, f_derivative, 1, 5)
newton_univariate_method(f, f_derivative, 1, 0)
newton_univariate_method(f, f_derivative, 1, -3)
newton_univariate_method(f, f_derivative, 1, 1)
newton_univariate_method(f, f_derivative, 1, 0.003)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 0.003)
source('~/My Projects/mathematical-methods-quantitative-finance-class/newton_method.R')
newton_univariate_method(f, f_derivative, 1, 0)
